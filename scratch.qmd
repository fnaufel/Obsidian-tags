
# Load packages

```{r setup}
library(purrr)
library(yaml)
library(parsermd)
library(tidyverse)
```


# Read notes

## Using yaml package alone

Not a good idea. It cannot handle the entire md file:

```{r error=TRUE}
read_yaml(
  'samples/Main notes/Alectryon recipes.md'
)
```

## Using parsermd and yaml packages

The parse_rmd function already parses the yaml!

```{r error=TRUE}
frontmatter <- parsermd::parse_rmd(
  'samples/Main notes/Alectryon recipes.md',
  allow_incomplete = TRUE
) %>% 
  rmd_select(has_type('rmd_yaml_list'))

# There is only one YAML block, so 
frontmatter <- frontmatter[[1]]
```

```{r}
frontmatter %>% str()
```


## Modify frontmatter

```{r}
frontmatter %>% pluck('areas')
frontmatter %>% pluck('tags')
frontmatter %>% pluck('not_there')
```

```{r}
frontmatter %>% 
  modify_at('tags', \(t) c(t, 'alectryon') ) %>% 
  discard_at('areas')
```

What happens if a field does not exist?

For `modify_at`, nothing.

```{r}
frontmatter %>% 
  modify_at('notthere', \(t) c(t, 'alectryon') )
```

For `discard_at`, nothing.

```{r}
frontmatter %>% 
  discard_at('notthere')
```


# Functions

```{r}
source('fix_tags.R')
```


# Tests

```{r}
get_md('samples/Main notes/Alectryon recipes.md')
```

```{r}
get_md('samples/Main notes/Alectryon recipes.md') %>% 
  get_frontmatter()
```

```{r}
get_md('samples/Main notes/Alectryon recipes.md') %>% 
  get_body()
```

```{r}
get_md('samples/Main notes/Alectryon recipes.md') %>% 
  get_body() %>% 
  get_frontmatter()
```

```{r}
fm <- get_md('samples/Main notes/Alectryon recipes.md') %>% 
  get_frontmatter()

fm %>% get_tags()
fm %>% get_areas()
```

```{r}
fm %>% get_areas() %>% 
  area2tag()
```

```{r}
fm %>% get_areas() %>% 
  area2tag(FALSE)
```

```{r}
"  [[  Areas/Soft ware/Alectryon | Alectryon  ]]  " %>% 
  area2tag()
```

```{r}
fm %>% 
  fix_frontmatter() %>% 
  cat()
```

```{r}
df <- get_md('samples/Main notes/Alectryon recipes.md') %>% 
  get_body() %>% 
  as_tibble()
```

```{r}
df
```

```{r}
fix_file('samples/Main notes/Alectryon recipes.md') %>% cat()
```

